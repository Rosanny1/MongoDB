
const database = 'filmes';
const collection = 'Filmes';

use ("Filmes")


db.filmes
db.filmes.insertOne({
  nome: 'Duna',  
  diretor: 'Denis Villeuneve',
  elenco: 'Timothée Chalamet, Rebecca Ferguson, Zendaya',
  ano: 2021, 
  premios: 0,
})
db.filmes.findOne()
 db.filmes.insertMany([
 { 
  nome: 'Central do Brasil', 
  diretor: 'Walter Salles',
  elenco: 'Fernanda Montenegro, Vinicius de Oliveira',
  ano: 1998,
  premios:20,
},
{ 
  nome: 'Cidade dos Sonhos',
  diretor: 'David Lynch',
  elenco: 'Naomi Watts, Laura Elena Harring',
  ano: 2001,
  premios: 18,
},
{ 
  nome: 'King Kong',
  diretor: 'Peter Jackson',
  elenco: 'Naomi Watts, Jack Black, Adrien Brody',
  ano: 2005,
  premios: 10,
},
{ 
  nome: 'Bela Vingança',   
  diretor: 'Emerald Fennel',
  elenco: 'Carey Mulligan, Bo Burnham',
  ano: 2020, 
  premios: 22,
},
{ 
  nome: 'SDA: A Sociedade do Anel', 
  diretor: 'Peter Jackson',
  elenco: 'Elijah Wood, Ian McKellen, Liv Tyler',
  ano: 2001,
  premios: 15,
},
{ 
  nome: 'Shrek',
  diretor: 'Andrew Adamson Vicky Jenson',
  elenco: 'Mike Myers, Eddie Murphy, Cameron Diaz',
  ano: 2001,
  premios: 10,
},
{ 
  nome: 'Cidade de Deus',
  diretor: 'Fernando Meirelles, Kátia Luind', 
  elenco: 'Alexandre Rodrigues, Leandro Firmino da Hora',
  ano: 2002,
  premios: 15,
},
{ 
  nome: 'Panico',   
  diretor: 'Wes Craven',
  elenco: 'Neve Campbell, Courtney Cox, David Arquette',
  ano: 1996,
  premios: 6,
},
 ])
  
//2 - Busque filmes lançados entre 1997 e 2004.
use ("Filmes")
db.filmes.find({$and: [
{ $or: [ { ano: { $gt: 1997 }}, { ano: { $lt: 2004}}]}
]})


//3 - Busque filmes de 2001 ou que comecem com a letra D.
use ("Filmes")
db.filmes.find(
 {$or:[{ano: 2001},{nome: /D/}]})

 
//4 - Busque filmes lançados dirigidos pelo Peter Jackson
 //ou pelo Walter Salles usando $in.
 use ("Filmes")
 db.filmes.find(
  {'diretor': {$in: ['Peter Jackson', 'Walter Salles']}})


 //5 - Busque filmes lançados entre 2002 e 2021 
 //e que contenham as atrizes Naomi Watts ou Carey Mulligan.
 use ("Filmes")
 db.filmes.find({$and: [
{ $or: [ { ano: { $gt: 2002 }}, { ano: { $lt: 2021}}]},
{ $or: [ { elenco: 'Naomi Watts'},
 { elenco: 'Carey Mulligan'}]}
]})


//6 - Busque todos os filmes que não sejam entre 2001 e 2005.
 use ("Filmes")
 db.filmes.find(
  {'ano': {$nin: [2001, 2005]}})


 //7 - Conte quantos filmes foram lançados em 2001.
 use ("Filmes")
 db.filmes.find({'ano': {$eq: 2001}}).count()


//8 - Selecione apenas o elenco numa distinct.
use ("Filmes")
db.filmes.distinct("elenco")

//9-Selecione os filmes lançados em 2001, apresentando seu nome e diretor apenas,
// em ordem decrescente, limitando a dois resultados.
use('Filmes')
db.filme.find(
    {ano: {$eq: 2001}},
    {nome:1, _id:0}).sort({diretor:-1}).limit(2)

//10 - Crie uma index usando o ano como referência.
use ("Filmes")
db.filmes.createIndex({"ano":1})


//11 - Some os prêmios de todos os filmes.
use ("Filmes")
db.filmes.aggregate([
    {$project: {  _id: "$_id",
        totalPremios: { $sum: "$premios" }
      }}])
      

//12 - Na coleção `sample_mflix` do Mongo Atlas DB,
//crie uma consulta que retorne os filmes
//com os seus comentários utilizando
//o estágio de agrupamento (e.g.: `$lookup`).

use ("sample_mflix")
 db.filmes.aggregate([ 
{ $lookup: { from: "sample_mflix", 
localField: "nome", 
  foreignField: "filme_comentario", 
  as: "dados" }}
])


